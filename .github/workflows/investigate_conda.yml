name: Investigate conda-build activation and CXXFLAGS

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test-cxxflags:
    name: test libcxx=${{ matrix.libcxx_version }}, ${{ matrix.description }}
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        include:
          - libcxx_version: "17"
            platform: "osx-64"
            extra_cmake_flags: "-DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_FIND_APPBUNDLE=LAST"
            description: "With FRAMEWORK/APPBUNDLE LAST"
          - libcxx_version: "17"
            platform: "osx-64"
            extra_cmake_flags: ""
            description: "Without FRAMEWORK/APPBUNDLE LAST"
          - libcxx_version: "14"
            platform: "osx-64"
            extra_cmake_flags: "-DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_FIND_APPBUNDLE=LAST"
            description: "With FRAMEWORK/APPBUNDLE LAST"
          - libcxx_version: "14"
            platform: "osx-64"
            extra_cmake_flags: ""
            description: "Without FRAMEWORK/APPBUNDLE LAST"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
          miniconda-version: "latest"
          channels: defaults
          channel-priority: strict

      - name: Setup macOS 10.10 SDK
        shell: bash -l {0}
        run: |
          echo "Setting up macOS SDK for osx-64 build"
          sdk_dir="buildscripts/github"
          mkdir -p "${sdk_dir}"

          # Define checksum (SHA256 for MacOSX10.10.sdk.tar.xz from phracker/MacOSX-SDKs@11.3)
          echo "3839b875df1f2bc98893b8502da456cc0b022c4666bc6b7eb5764a5f915a9b00  MacOSX10.10.sdk.tar.xz" > "${sdk_dir}/MacOSX10.10.sdk.checksum"

          # Download SDK
          echo "Downloading MacOSX10.10.sdk.tar.xz"
          wget -q https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.10.sdk.tar.xz

          # Verify checksum
          echo "Verifying SDK checksum"
          shasum -a 256 -c "${sdk_dir}/MacOSX10.10.sdk.checksum" || exit 1

          # Extract SDK to /opt
          echo "Extracting SDK to /opt"
          sudo mkdir -p /opt
          sudo tar -xf MacOSX10.10.sdk.tar.xz -C /opt
          echo "macOS SDK setup complete"

      - name: Install build tools and libcxx
        shell: bash -l {0}
        run: |
          echo "--- Installing build tools and libcxx=${{ matrix.libcxx_version }} ---"
          conda install --yes \
            'libcxx=${{ matrix.libcxx_version }}' \
            'clang_osx-64=${{ matrix.libcxx_version }}' \
            'clangxx_osx-64=${{ matrix.libcxx_version }}' \
            cmake ninja
          echo "--- Conda Info ---"
          conda info
          echo "--- Conda List ---"
          conda list

      - name: Test simple CMake project
        shell: bash -l {0}
        run: |
          echo "--- Contents of bin directory ---"
          ls -l $CONDA_PREFIX/bin

          # Create a test project directory
          mkdir test-project && cd test-project

          # Create the CMakeLists.txt to check for a working standard library
          cat << 'EOF' > CMakeLists.txt
          cmake_minimum_required(VERSION 3.10)
          project(mwr)
          include(CheckCXXSourceCompiles)

          set(GCC_MIN 7.4)
          check_cxx_source_compiles("
          #include <iosfwd>
          int main() { return 0; }
          "
                MIN_CXX)
              if(NOT MIN_CXX)
                message(FATAL_ERROR "libstdc++ version must be at least ${GCC_MIN}.")
              endif()
          EOF

          # Configure the project
          mkdir build && cd build
          cmake .. \
            -DCMAKE_C_COMPILER=$CONDA_PREFIX/bin/clang \
            -DCMAKE_CXX_COMPILER=$CONDA_PREFIX/bin/clang++ \
            -DCMAKE_EXE_LINKER_FLAGS="-Wl,-rpath,${CONDA_PREFIX}/lib" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
            -DCMAKE_OSX_SYSROOT=/opt/MacOSX10.10.sdk \
            ${{ matrix.extra_cmake_flags }}

          echo "CMake configuration successful. Standard library check passed."
